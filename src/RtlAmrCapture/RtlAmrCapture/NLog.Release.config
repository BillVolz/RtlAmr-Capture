<?xml version="1.0" encoding="utf-8" ?>
<nlog
	xdt:Transform="SetAttributes"
	throwExceptions="false"
    autoReload="true"
    internalLogFile="logs/nlog-internal.log"
	xmlns:xdt="http://schemas.microsoft.com/XML-Document-Transform"
	xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

	<extensions>
		<add assembly="NLog.Targets.OpenSearch" xdt:Transform="Insert" />
		<add assembly="NLog.Web.AspNetCore" xdt:Transform="Insert"/>
	</extensions>

	<variable xdt:Transform="RemoveAll" />
	<variable name="systemEnvironment"
	          value="#{System.Environment}"
	          xdt:Transform="Insert" />

	<targets xdt:Transform="Replace">

		<target xsi:type="OpenSearch"
                name="opensearch"
                uris="#{OpenSearch.Uris}"
                username="#{OpenSearch.Username}"
                password="#{OpenSearch.Password}"
                index="#{OpenSearch.Index}-${date:format=yyyy.MM.dd}"
                retryCount ="10"
                batchSize="1000"
                taskDelayMilliseconds="5000"
                overflowAction="Grow"
                includeEventProperties="true"
                includeCallSite="true"
                includeCallSiteStackTrace="true"
                enableHttpCompression="true"
                validateCertificates="true"
                certificateThumprint="#{OpenSearch.CertificateThumbprint}">

			<contextproperty name="appDomain" layout="${appdomain:format={1\}}" />
			<contextproperty name="aspnet.environment" layout="${aspnet-environment}" />
			<contextproperty name="aspnet.request.contentlength" layout="${aspnet-request-contentlength}" />
			<contextproperty name="aspnet.request.contenttype" layout="${aspnet-request-contenttype}" />
			<contextproperty name="aspnet.request.duration" layout="${aspnet-request-duration}" />
			<contextproperty name="aspnet.request.headers" layout="${aspnet-request-headers}" />
			<contextproperty name="aspnet.request.host" layout="${aspnet-request-host}" />
			<contextproperty name="aspnet.request.ip" layout="${aspnet-request-ip}" />
			<contextproperty name="aspnet.request.ip-forwarded" layout="${aspnet-request-ip:CheckForwardedForHeader=true}" />
			<contextproperty name="aspnet.request.local-ip" layout="${aspnet-request-local-ip}" />
			<contextproperty name="aspnet.request.local-port" layout="${aspnet-request-local-port}" />
			<contextproperty name="aspnet.request.method" layout="${aspnet-request-method}" />
			<contextproperty name="aspnet.request.querystring" layout="${aspnet-request-querystring}" />
			<contextproperty name="aspnet.request.referrer" layout="${aspnet-request-referrer}" />
			<contextproperty name="aspnet.request.remote-port" layout="${aspnet-request-remote-port}" />
			<contextproperty name="aspnet.request.routeparameters" layout="${aspnet-request-routeparameters}" />
			<contextproperty name="aspnet.request.url" layout="${aspnet-request-url}" />
			<contextproperty name="aspnet.request.useragent" layout="${aspnet-request-useragent}" />
			<contextproperty name="aspnet.response.contentlength" layout="${aspnet-response-contentlength}" />
			<contextproperty name="aspnet.response.contenttype" layout="${aspnet-response-contenttype}" />
			<contextproperty name="aspnet.response.has-started" layout="${aspnet-response-has-started}" />
			<contextproperty name="aspnet.response.headers" layout="${aspnet-response-headers}" />
			<contextproperty name="aspnet.response.statuscode" layout="${aspnet-response-statuscode}" />
			<contextproperty name="aspnet.request.body" layout="${aspnet-request-posted-body}" />
			<contextproperty name="aspnet.sessionid" layout="${aspnet-sessionid}" />
			<contextproperty name="aspnet.traceidentifier" layout="${aspnet-traceidentifier}" />
			<contextproperty name="aspnet.user.authtype" layout="${aspnet-user-authtype}" />
			<contextproperty name="aspnet.user.claim" layout="${aspnet-user-claim}" />
			<contextproperty name="aspnet.user.identity" layout="${aspnet-user-identity}" />
			<contextproperty name="aspnet.user.isauthenticated" layout="${aspnet-user-isauthenticated}" />
			<contextproperty name="assemblyVersion" layout="${assembly-version}" />
			<contextproperty name="dotnet.version" layout="${environment:DOTNET_VERSION}" />
			<contextproperty name="gc.collectionCount0" layout="${gc:property=CollectionCount0}" />
			<contextproperty name="gc.collectionCount1" layout="${gc:property=CollectionCount1}" />
			<contextproperty name="gc.collectionCount2" layout="${gc:property=CollectionCount2}" />
			<contextproperty name="gc.maxGeneration" layout="${gc:property=MaxGeneration}" />
			<contextproperty name="gc.totalMemory" layout="${gc:property=TotalMemory}" />
			<contextproperty name="gc.totalMemoryForceCollection" layout="${gc:property=TotalMemoryForceCollection}" />
			<contextproperty name="hostname" layout="${hostname}" />
			<contextproperty name="process.handleCount" layout="${processinfo:property=HandleCount}" />
			<contextproperty name="process.maxWorkingSet" layout="${processinfo:property=MaxWorkingSet}" />
			<contextproperty name="process.minWorkingSet" layout="${processinfo:property=MinWorkingSet}" />
			<contextproperty name="process.name" layout="${processname}" />
			<contextproperty name="process.peakWorkingSet64" layout="${processinfo:property=PeakWorkingSet64}" />
			<contextproperty name="process.pid" layout="${processinfo:property=Id}" />
			<contextproperty name="process.privateMemorySize64" layout="${processinfo:property=PrivateMemorySize64}" />
			<contextproperty name="process.startTime" layout="${processinfo:property=StartTime}" />
			<contextproperty name="process.virtualMemorySize64" layout="${processinfo:property=VirtualMemorySize64}" />
			<contextproperty name="process.workingSet64" layout="${processinfo:property=WorkingSet64}" />
			<contextproperty name="threadId" layout="${threadid}" />
			<contextproperty name="system.environment" layout="${systemEnvironment}" />
			<contextproperty name="kubernetes.namespace" layout="${environment:KUBERNETES_NAMESPACE}" />
		</target>

	</targets>

	<rules xdt:Transform="Replace">
		<logger name="*" minlevel="#{Config.Logging.Level}" writeTo="opensearch" />
	</rules>
</nlog>